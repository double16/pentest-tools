# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "kalilinux/rolling"
  config.vm.box_check_update = false
  # config.vagrant.plugins = ["vagrant-disksize"]
  if Vagrant.has_plugin?("vagrant-disksize")
    config.disksize.size = '300GB'
  end
  config.vm.box_check_update = false
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"
  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.provision "shell", name: "config", privileged: true, inline: <<-SCRIPT
    gsettings set org.gnome.desktop.screensaver idle-activation-enabled false
    ln -sf /usr/share/zoneinfo/US/Central /etc/localtime
  SCRIPT

  config.vm.provision "shell", name: "pia", privileged: false, inline: <<-SCRIPT
    [[ -f /usr/local/bin/piactl ]] && exit 0
    curl -L -o /tmp/pia.run https://installers.privateinternetaccess.com/download/pia-linux-3.5.5-08091.run
    bash /tmp/pia.run --quiet --accept
    rm /tmp/pia.run
  SCRIPT

  config.vm.provision "shell", name: "repos", privileged: false, inline: <<-SCRIPT
    mkdir -p /home/vagrant/src || exit $?
    cd /home/vagrant/src
    for URL in \
        https://github.com/fuzzdb-project/fuzzdb.git \
        https://github.com/szski/shapeshifter.git \
        https://github.com/vladko312/SSTImap.git \
        https://github.com/swisskyrepo/SSRFmap.git \
        https://github.com/carlospolop/Auto_Wordlists.git \
        https://github.com/hansmach1ne/LFImap.git \
        https://github.com/double16/shadycompass.git \
      ; do
      D="$(basename "${URL}" | sed 's/.git$//')"
      if [[ -d "${D}" ]]; then
        ( cd "${D}" && git pull --depth=1 )
      else
        git clone --depth 1 "${URL}"
      fi
    done
  SCRIPT

  config.vm.provision "shell", name: "packages", privileged: true, env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT
    set -e
    if ! command -v snap; then
      apt install -y snapd
      systemctl enable --now snapd
      systemctl enable --now snapd.apparmor
    fi
    if [[ ! -f /snap/bin/obsidian ]]; then
      curl --fail -o /tmp/obsidian.snap -L https://github.com/obsidianmd/obsidian-releases/releases/download/v1.4.16/obsidian_1.4.16_amd64.snap &&\
      snap install --classic --dangerous /tmp/obsidian.snap
      rm /tmp/obsidian.snap
    fi

    # https://www.kali.org/docs/general-use/metapackages/
    apt install -y --install-recommends \
        kali-defaults-desktop \
        kali-tools-fuzzing kali-tools-crypto-stego kali-tools-database kali-tools-exploitation kali-tools-identify \
        kali-tools-information-gathering kali-tools-passwords kali-tools-post-exploitation kali-tools-vulnerability kali-tools-web kali-tools-windows-resources \
        linux-headers-amd64 zsh-autosuggestions zsh-syntax-highlighting zsh-theme-powerlevel9k jq htop code-oss \
        seclists payloadsallthethings \
        gobuster hakrawler xxd file nikto wpscan joomscan nuclei whatweb hydra xsser python3-selenium feroxbuster \

    # apt install -y vim-gtk3
    # apt install -y golang-go
    # Upgrading breaks things, like Chromium
    # apt upgrade -y burpsuite
    if command -v go; then
      test -f /home/vagrant/go/bin/interactsh-client || su vagrant -c "go install -v github.com/projectdiscovery/interactsh/cmd/interactsh-client@latest"
    fi
  SCRIPT

  config.vm.provision "shell", name: "zap", privileged: false, env: { 'DEBIAN_FRONTEND': 'noninteractive'},
                      path: "zap-install.sh"

  config.vm.provision "shell", name: "zap-clean",
                      # after: "zap",
                      privileged: true, run: "never", env: { 'DEBIAN_FRONTEND': 'noninteractive'},
                      path: "zap-install.sh", args: ["--clean"]

  config.vm.provision "shell", name: "google-chrome", privileged: true, env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT
    cd /tmp
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    apt install -y /tmp/google-chrome-stable_current_amd64.deb
    rm /tmp/google-chrome-stable_current_amd64.deb
  SCRIPT

  config.vm.provision "shell", name: "docker", privileged: true, run: "never", env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT
    addgroup --system docker || true
    adduser vagrant docker || true
    snap install docker
  SCRIPT

  config.vm.provision "shell", name: "autologin", privileged: true, inline: <<-SCRIPT
    if [[ "$(</etc/X11/default-display-manager)" =~ "lightdm" ]]; then
      sed -i -e 's/#autologin-guest\s*=.*/autologin-guest=false/' -e 's/#autologin-user\s*=.*/autologin-user=vagrant/' -e 's/#autologin-user-timeout\s*=.*/autologin-user-timeout=0/' /etc/lightdm/lightdm.conf
    elif [[ "$(</etc/X11/default-display-manager)" =~ "gdm" ]]; then
      sed -i -e 's/#\s*AutomaticLoginEnable\s*=.*/AutomaticLoginEnable=true/' -e 's/#\s*AutomaticLogin\s*=.*/AutomaticLogin=vagrant/' /etc/gdm3/daemon.conf
    fi
  SCRIPT

  config.vm.provision "shell", name: "lockscreen", privileged: true, inline: <<-SCRIPT
        mkdir -p "/home/vagrant/.config/xfce4/xfconf/xfce-perchannel-xml"
        cat > "/home/vagrant/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml" << EOF
<?xml version="1.0" encoding="UTF-8"?>

<channel name="xfce4-power-manager" version="1.0">
  <property name="xfce4-power-manager" type="empty">
    <property name="power-button-action" type="empty"/>
    <property name="show-panel-label" type="empty"/>
    <property name="show-tray-icon" type="bool" value="false"/>
    <property name="lock-screen-suspend-hibernate" type="bool" value="false"/>
    <property name="dpms-enabled" type="bool" value="false"/>
    <property name="blank-on-battery" type="int" value="0"/>
    <property name="blank-on-ac" type="int" value="0"/>
    <property name="logind-handle-lid-switch" type="bool" value="false"/>
  </property>
</channel>
EOF
        cat > "/home/vagrant/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-screensaver.xml" << EOF
<?xml version="1.0" encoding="UTF-8"?>

<channel name="xfce4-screensaver" version="1.0">
  <property name="lock" type="empty">
    <property name="sleep-activation" type="bool" value="false"/>
  </property>
</channel>
EOF
  SCRIPT

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.linked_clone = true
    vb.memory = "8192"
    vb.cpus = 6
    # vb.memory = "1024"
    # vb.cpus = 2
    # vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  end
  config.vm.provider "libvirt" do |libvirt|
    libvirt.memory = "8192"
    libvirt.cpus = 6
    libvirt.driver = "qemu"
    libvirt.features = ['apic', 'pae' ]
    libvirt.usb_controller :model => "qemu-xhci"
    libvirt.input :type => "tablet", :bus => "usb"
  end
end
