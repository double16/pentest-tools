# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "kalilinux/rolling"
  config.vagrant.plugins = ["vagrant-cachier"]
  config.cache.scope = :box
  # config.vm.box_check_update = false
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"
  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.provision "shell", name: "fix-apt-cache", privileged: true, inline: <<-SCRIPT
    mkdir -p /tmp/vagrant-cache/apt
    mkdir -p /tmp/vagrant-cache/apt_lists
  SCRIPT

  config.vm.provision "shell", name: "config", privileged: false, inline: <<-SCRIPT
    gsettings set org.gnome.desktop.screensaver idle-activation-enabled false
    ln -sf /usr/share/zoneinfo/US/Central /etc/localtime
  SCRIPT

  config.vm.provision "shell", name: "pia", privileged: false, inline: <<-SCRIPT
    [[ -f /usr/local/bin/piactl ]] && exit 0
    curl -L -o /tmp/pia.run https://installers.privateinternetaccess.com/download/pia-linux-3.5.1-07760.run
    bash /tmp/pia.run --quiet --accept
    rm /tmp/pia.run
  SCRIPT

  config.vm.provision "shell", name: "repos", privileged: false, inline: <<-SCRIPT
    mkdir -p /home/vagrant/src || exit $?
    cd /home/vagrant/src
    for URL in https://github.com/fuzzdb-project/fuzzdb.git https://github.com/szski/shapeshifter.git; do
      D="$(basename "${URL}" | sed 's/.git$//')"
      if [[ -d "${D}" ]]; then
        ( cd "${D}" && git pull --depth=1 )
      else
        git clone --depth 1 "${URL}"
      fi
    done
  SCRIPT

  config.vm.provision "shell", name: "packages", privileged: true, env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT
    set -e
    if ! command -v snap; then
      apt install -y snapd
      systemctl enable snapd
      systemctl start snapd
    fi
    if [[ ! -f /snap/bin/obsidian ]]; then
      curl -o /tmp/obsidian.snap -L https://github.com/obsidianmd/obsidian-releases/releases/download/v0.15.6/obsidian_0.15.6_amd64.snap &&\
      snap install --dangerous /tmp/obsidian.snap
      rm /tmp/obsidian.snap
    fi

    # https://www.kali.org/docs/general-use/metapackages/
    apt install -y jq htop code-oss kali-linux-default kali-tools-fuzzing kali-tools-windows-resources linux-headers-amd64
    # apt install -y vim-gtk3
    # apt install -y golang-go
    # Upgrading breaks things, like Chromium
    # apt upgrade -y burpsuite
    if command -v go; then
      test -f /home/vagrant/go/bin/interactsh-client || su vagrant -c "go install -v github.com/projectdiscovery/interactsh/cmd/interactsh-client@latest"
    fi
  SCRIPT

  config.vm.provision "shell", name: "zap", privileged: false, env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT

    ZAP_PLUGINS="
accessControl
ascanrules
ascanrulesBeta
attacksurfacedetector
authstats
browserView
bruteforce
callgraph
communityScripts
custompayloads
directorylistv2_3
evalvillain
fileupload
fuzzdb
fuzzdboffensive
graphql
highlighter
imagelocationscanner
jsonview
jython
jwt
levoai
neonmarker
oast
openapi
packpentester
paramdigger
pscanrulesBeta
reflect
reveal
revisit
saml
sequence
soap
sqliplugin
sse
tokengen
treetools
viewstate
wappalyzer
webdriverlinux
zest
"

    command -v zaproxy || sudo apt install -y zaproxy

    ZAP_WEEKLY="2023-10-24"
    ZAP_WEEKLY_URL="https://github.com/zaproxy/zaproxy/releases/download/w${ZAP_WEEKLY}/ZAP_WEEKLY_D-${ZAP_WEEKLY}.zip"
    ZAP_WEEKLY_DIR="/usr/local/share/ZAP_D-${ZAP_WEEKLY}"
    ZAP_WEEKLY_BIN="/usr/local/share/ZAP_D-${ZAP_WEEKLY}/zap.sh"
    if [ ! -f "${ZAP_WEEKLY_BIN}" ]; then
      curl -L -o /tmp/zap.zip "${ZAP_WEEKLY_URL}"
      sudo unzip /tmp/zap.zip -d /usr/local/share
      test -f "${ZAP_WEEKLY_BIN}"
    fi
    sudo tee "/usr/share/applications/kali-zaproxy-${ZAP_WEEKLY}.desktop" << EOF
[Desktop Entry]
Name=zap ${ZAP_WEEKLY}
StartupWMClass=ZAP ${ZAP_WEEKLY}
Encoding=UTF-8
Exec=${ZAP_WEEKLY_BIN}
Icon=kali-zaproxy
StartupNotify=false
Terminal=false
Type=Application
Categories=03-webapp-analysis;
X-Kali-Package=zaproxy
EOF
    sudo cp "/usr/share/applications/kali-zaproxy-${ZAP_WEEKLY}.desktop" "/usr/share/kali-menu/applications/kali-zaproxy-${ZAP_WEEKLY}.desktop"

    for ZAP_CONF in .ZAP .ZAP_D; do
      ZAP_JVM_DIR="/home/vagrant/${ZAP_CONF}"
      ZAP_JVM_FILE="${ZAP_JVM_DIR}/.ZAP_JVM.properties"
      if [ ! -s "${ZAP_JVM_FILE}" ]; then
        mkdir -p "${ZAP_JVM_DIR}"
        echo "-Xmx2G" > "${ZAP_JVM_FILE}"
      fi
    done

    ZAP_ADDONINSTALL_ARGS="-cmd -addonupdate"
    for plugin in ${ZAP_PLUGINS}; do
      ZAP_ADDONINSTALL_ARGS="${ZAP_ADDONINSTALL_ARGS} -addoninstall ${plugin}"
    done

    echo zaproxy ${ZAP_ADDONINSTALL_ARGS}
    zaproxy ${ZAP_ADDONINSTALL_ARGS}

    echo ${ZAP_WEEKLY_BIN} ${ZAP_ADDONINSTALL_ARGS}
    ${ZAP_WEEKLY_BIN} ${ZAP_ADDONINSTALL_ARGS}

    mkdir -p ${HOME}/.ZAP/plugin ${HOME}/.ZAP_D/plugin
    find /vagrant/ -iname "*.zap" -type f | while read F; do
      cp -uv "${F}" ${HOME}/.ZAP/plugin/
      cp -uv "${F}" ${HOME}/.ZAP_D/plugin/
    done
  SCRIPT

  config.vm.provision "shell", name: "googlechrome", privileged: true, run: "never", env: { 'DEBIAN_FRONTEND': 'noninteractive'}, inline: <<-SCRIPT
    cd /tmp
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    apt install -y /tmp/google-chrome-stable_current_amd64.deb
    rm /tmp/google-chrome-stable_current_amd64.deb
  SCRIPT

  config.vm.provision "shell", name: "autologin", privileged: true, inline: <<-SCRIPT
    if [[ "$(</etc/X11/default-display-manager)" =~ "lightdm" ]]; then
      sed -i -e 's/#autologin-guest\s*=.*/autologin-guest=false/' -e 's/#autologin-user\s*=.*/autologin-user=vagrant/' -e 's/#autologin-user-timeout\s*=.*/autologin-user-timeout=0/' /etc/lightdm/lightdm.conf
    elif [[ "$(</etc/X11/default-display-manager)" =~ "gdm" ]]; then
      sed -i -e 's/#\s*AutomaticLoginEnable\s*=.*/AutomaticLoginEnable=true/' -e 's/#\s*AutomaticLogin\s*=.*/AutomaticLogin=vagrant/' /etc/gdm3/daemon.conf
    fi
  SCRIPT

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.linked_clone = true
    vb.memory = "4096"
    # vb.memory = "1024"
    # vb.cpus = 2
    # vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  end

  config.vm.define "lululemon" do |v|
    v.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
    v.vm.provider "libvirt" do |vt|
      vt.memory = "8192"
      vt.cpus = 6
    end
  end

  config.vm.define "lucidmotors" do |v|
    v.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
    v.vm.provider "libvirt" do |vt|
      vt.memory = "8192"
      vt.cpus = 6
    end
  end

  config.vm.define "lime" do |v|
    v.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
    v.vm.provider "libvirt" do |vt|
      vt.memory = "8192"
      vt.cpus = 6
    end
  end

  config.vm.define "cloudinary" do |v|
    v.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
    v.vm.provider "libvirt" do |vt|
      vt.memory = "8192"
      vt.cpus = 6
    end
  end

  config.vm.define "humblebundle" do |v|
    v.vm.provider "virtualbox" do |vb|
      vb.memory = "8192"
      vb.cpus = 6
    end
    v.vm.provider "libvirt" do |vt|
      vt.memory = "8192"
      vt.cpus = 6
    end
  end
end
